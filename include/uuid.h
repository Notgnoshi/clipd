#pragma once

#include "common.h"

#include <iomanip>
#include <random>
#include <sstream>
#include <string>

/**
 * @brief Generate a random byte.
 *
 * @note While the generated bytes will be in the range `[0, 255]`, this function returns a
 * `unit16_t` because `std::hex` treats `uint8_t` values differently.
 */
inline uint16_t random_byte()
{
    static std::random_device rd;
    static std::mt19937 gen( rd() );
    static std::uniform_int_distribution<uint16_t> dist( 0, 255 );

    return dist( gen );
}

/**
 * @brief Generate a random hex string of the specified number of bytes.
 *
 * @param bytes The number of two-character byte groups to generate.
 * @return A string of random hex characters.
 */
std::string random_hex( size_t bytes )
{
    std::stringstream ss;

    for( size_t i = 0; i < bytes; ++i )
    {
        ss << std::setfill( '0' ) << std::setw( 2 ) << std::hex << random_byte();
    }

    return ss.str();
}
